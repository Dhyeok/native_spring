plugins {
	id 'org.springframework.boot' version '2.7.18' // 그래들에서 스프링부트의 지원을 제공하고 사용할 버전 선언
	id 'io.spring.dependency-management' version '1.0.15.RELEASE' // 스프링에 대한 의존성 관리 기능을 제공
	id 'java' // 애플리케이션의 컴파일, 빌드, 테스트 작업을 수립하고 그래들에 자바 지원을 제공
}

group = 'com.polarbookshop' // 카탈로그 서비스 프로젝트의 그룹 id
version = '0.0.1-SNAPSHOT'  // 애플리케이션의 버전, 기본적으로 0.0.1-snapshot
sourceCompatibility = '17' // 프로젝트 빌드 시 사용할 자바 버전

description = 'Provides functionality for managing the books in the catalog.'

configurations { // 프로젝트를 빌드할 때 그래들이 configuration-processor를 사용하도록 설정
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}


ext {
	set('springCloudVersion', "2021.0.9")
	set('testcontainersVersion', "1.19.8") // 사용할 테스트 컨테이너 버전을 지정
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링 mvc로 웹 애플리케이션을 빌드하는 데 필요한 라이브러리를 제공하며 임베디드 서버로는 기본 설정 상 톰캣이 포함되어있음
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc' // 스프링 데이터 및 jdbc를 사용해 관계형 데이터베이스에 대한 데이터 지속성을 위해 필요한 라이브러리 제공
	implementation 'org.flywaydb:flyway-core'

	runtimeOnly 'org.postgresql:postgresql' // 데이터베이스에 연결할 수 있도록 jdbc 드라이버를 제공

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test' // 스프링 테스트, junit, 어서트j, 모키토를 포함함 애플리케이션을 테스트 할 수 있는 여러 라이브러리 및 유틸리티 제공
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.testcontainers:postgresql' // postgresql 데이터베이스에 대한 컨테이너 관리 기능을 제공
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}" // 테스트 컨테이너 의존성 관리를 위한 bom
	}
}


bootRun {
	systemProperty 'spring.profiles.active', 'testdata'
}


bootBuildImage { // 빌드팩을 사용해 OCI 이미지를 빌드하기 위한 스프링 부트 플러그인 작업
	//builder = "docker.io/paketobuildpacks/builder-jammy-base"
	imageName = "${project.name}"
	// 빌드할 OCI 이미지의 이름, 이 이름은 그래들의 프로젝트 설정에서 정의한 이름과 같다. 버전 번호를 사용하지 않고 암묵적인 latest 태그를 사용한다.
	environment = ["BP_JVM_VERSION": "17"] // 이미지에 설치할 JVM 버전. 최신버전인 자바 17을 사용한다.

	docker { // 컨테이너 저장소 연결을 설정하기 위한 섹션
		publishRegistry { // 컨테이너 저장소 인증을 설정하기 위한 섹션. 값은 그래들 속성을 통해 전달된다.
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
		}
	}
}

	tasks.named('test') {
	useJUnitPlatform() // junit 5가 제공하는 junit 플랫폼으로 테스트하도록 설정
}
