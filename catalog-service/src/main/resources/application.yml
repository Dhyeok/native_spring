server:
  port: 9001 # http port
  shutdown: graceful
  tomcat:
    connection-timeout: 2s # 연결 타임아웃 : 클라이언트에서 tcp 연결을 수락하고 실제로 http 요청을 받기까지 톰캣이 최대한 기다리는 시간, dos 어택 방지 도움, default 20s 하지만 msa구조에선느 너무 김
    keep-alive-timeout: 15s # 새로운 http 요청을 기다리는 동안 연결을 유지하는 시간
    threads:
      max: 50 # 최대 요청 처리 스레드 수 default 200
      min-spare: 5 # 풀에 항상 유지해야 하는 최소의 스레드 수 default 100

spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s 설정 서버에 연결될 때 까지 기다리는 시간(밀리초)
      request-read-timeout: 5000 # 5s 설정 서버에서 설정 데이터를 읽을 때까지 기다리는 시간(밀리초)
      fail-fast: false # In production, set to true 설정 서버 연결 실패를 치명적 오류로 인식
      retry:
        max-attempts: 6 # 시도 최대 횟수
        initial-interval: 1000 # 1s 최초 재시도 지연 시간(밀리초)
        max-interval: 2000 # 2s 재시도 지연 최대 시간(밀리초)
        multiplier: 1.1 # 지연 시간 계산 승수
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000 # 풀에서 연결 객체를 얻기위해 기다려야 하는 최대시간(밀리초)
      maximum-pool-size: 5 # 히카리cp가 풀에 최대한으로 유지할 수 있는 연결 객체의 수

management:
  endpoints:
    web:
      exposure:
        include: refresh

polar:
  greeting: Welcome to the local book catalog!